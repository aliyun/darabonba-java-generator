type @a = [ string  ]

/**
  TestModel
*/
model Test1{
  test: string(description='test desc', name='test', deprecated=false, nullable=false, checkBlank=false, sensitive=false), //model的test back comment
  test2: string(description='test2 desc', name='test2', deprecated=true, nullable=true, checkBlank=true, sensitive=true), //model的test2 back comment
}

/**
  TestModel2
*/
model Test2{
  // model的test front comment
  test: string(description='test desc', name='test'),
  // model的test front comment
  test2: string(description='test2 desc', name='test2'),
}

/**
  TestModel3
*/
model Test3{
  // empty comment1
  // empy comment2
}

/**
  * @deprecated Test4 is deprecated, use Test3 instead.
 */
// Deprecated
model Test4{
  test: string(description='The natural language that is used to filter responses. For more information, visit [RFC 7231](https://tools.ietf.org/html/rfc7231). Valid values:

*   zh-CN: Chinese
*   en-US: English
*   ja: Japanese

Default value: zh-CN.', name='test', deprecated=true),
  test2: string(description='test2 desc', name='test2', deprecated=false),
}

/**
  Init Func
*/
// comment between init and annotation
init(a:string, b:string){
  // string declate comment
  var str = 'sss';
  // new model instance comment
  var modelInstance = new Test1{
    test = 'test', //test declare back comment
    test2 = 'test2', //test2 declare back comment
  };

  var array = [ 
    // array string comment
    'string',
    // array number comment
    300
    // array back comment
  ];
}

/**
  testAPI
*/
//testAPI comment one
//testAPI comment two
api testAPI(): void {
  // new model instance comment
  var modelInstance = new Test1{
    // test declare front comment
    test = 'test', 
    // test2 declare front comment
    test2 = 'test2', 
  };
  // number declare comment
  var num = 123;
  // static function call comment
  staticFunc();
} returns {
  // static async function call
  testFunc();
  // return comment
   return;
} runtime {
  // empty runtime comment
  // another runtime comment
}

// testAPI2 comment
api testAPI2(): void {
  // new model instance comment
  var modelInstance = new Test3{
      //empty model 
  };
  // boolean declare comment
  var bool = true;
  if(bool){
    //empty if
  }else{
    //empty else
  }
  // api function call comment
  testAPI();
  // back comment
} returns {
  // empty return comment
} runtime {
  // runtime retry comment
  retry = true
  // runtime back comment one
  // runtime back comment two
}

/**
  staticFunc
*/
// staticFunc comment
static function staticFunc(): void{
  var a = [
    // empty annotation comment
  ];
}

/**
  testFunc
*/
// testFunc comment
static async function testFunc(): void {
    // empty comment1
    // empty comment2
}

// Deprecated
/**
 * @summary Queries available Alibaba Cloud regions. The natural language that is used to filter responses. For more information, visit [RFC 7231](https://tools.ietf.org/html/rfc7231). Valid values:
 * *   zh-CN: Chinese
 * *   en-US: English
 * *   ja: Japanese
 *
 * @description Queries available Alibaba Cloud regions. The natural language that is used to filter responses. For more information, visit [RFC 7231](https://tools.ietf.org/html/rfc7231). Valid values:
 * *   zh-CN: Chinese
 * *   en-US: English
 * *   ja: Japanese
 * 
 * Default value: zh-CN.
 * 
 * 
 * > 这是Note的内容
 *
 * > Notice: 这是注意的内容
 *
 * @deprecated deprecatedFunc is deprecated.
 *
 * @param test string
 * @param _test string
 * @return void
 * @throws InternalError Server error. 500 服务器端出现未知异常。
 * @throws StackNotFound The Stack (%(stack_name)s) could not be found.  404 资源栈不存在。
 */
// Deprecated
static async function deprecatedFunc(test: string, _test: string): void {
    // empty comment1
    // empty comment2
}

/**
 * @summary annotation test summary
 * summary description1
 * summary description2
 *
 * @deprecated test is deprecated, use xxx instead.
 * deprecated description1
 * deprecated description2
 * 
 * @param test string param1
 * @param _test string param2
 * @return void
 * @throws InternalError Server error. 500 服务器端出现未知异常。
*/
static async function multiLineAnnotation(test: string, _test: string): void {
}


/**
 * @deprecated 
 * deprecated test for line break.
 * 
 * @param test string param1
 * param test for line break.
 * @param _test string param2
 * @return void
 * return test for line break.
 * @throws InternalError Server error. 500 服务器端出现未知异常。
 * throws test for line break.
*/
static async function lineBreakAnnotation(test: string, _test: string): void {
}